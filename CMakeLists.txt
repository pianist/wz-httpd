CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(wz-httpd VERSION 1.1.1)

#SET(CMAKE_C_FLAGS "-O3 -Wall -fomit-frame-pointer -funroll-loops -pedantic -Wno-long-long -Wno-variadic-macros -fPIC")
#SET(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS}")

IF(CMAKE_SYSTEM_NAME STREQUAL "Linux")
  SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)
  SET(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS)
ENDIF(CMAKE_SYSTEM_NAME STREQUAL "Linux")

FIND_PATH(EXPAT_INCLUDE_DIR expat.h /usr/include/ /usr/local/include)
INCLUDE_DIRECTORIES(include ./ ${EXPAT_INCLUDE_DIR})

FIND_PATH(CODA_INCLUDE_DIR coda/coda.h)
INCLUDE_DIRECTORIES(${CODA_INCLUDE_DIR})

IF(CMAKE_SYSTEM_NAME STREQUAL Linux)
  ADD_DEFINITIONS(-DMODEL_LINUX_EPOLL)
ELSE(CMAKE_SYSTEM_NAME STREQUAL Linux)
  ADD_DEFINITIONS(-DMODEL_FREEBSD_KQUEUE)
ENDIF(CMAKE_SYSTEM_NAME STREQUAL Linux)

ADD_EXECUTABLE(wz-httpd src/listener.cpp src/plugins.cpp src/server_status.cpp src/server_ws_status.cpp src/talker.cpp src/wz-httpd.cpp src/wspp.cpp)

FIND_LIBRARY(CODA_LIBRARY NAMES coda PATHS /usr/lib /usr/local/lib PATHS /usr/lib64 /usr/local/lib64)
FIND_LIBRARY(EXPAT_LIBRARY NAMES expat PATHS /usr/lib /usr/local/lib)
FIND_LIBRARY(CRYPTO_LIBRARY NAMES crypto PATHS /usr/lib /usr/local/lib)

TARGET_LINK_LIBRARIES(wz-httpd ${CODA_LIBRARY} ${EXPAT_LIBRARY} ${CRYPTO_LIBRARY} pthread)

IF(CMAKE_SYSTEM_NAME STREQUAL Linux)
	TARGET_LINK_LIBRARIES(wz-httpd dl)
ENDIF(CMAKE_SYSTEM_NAME STREQUAL Linux)

INSTALL(TARGETS wz-httpd DESTINATION bin)
INSTALL(FILES include/wz_handler.h DESTINATION include)
INSTALL(FILES conf/wzconfig.xml.example DESTINATION etc)

IF (NOT CPACK_GENERATOR)
    SET (CPACK_GENERATOR "RPM" "DEB" "ZIP" "TGZ")
ENDIF (NOT CPACK_GENERATOR)
SET (CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
SET (CPACK_PACKAGE_NAME "wz-httpd")
SET (CPACK_PACKAGE_CONTACT "ba4an@yandex.ru")
SET (CPACK_PACKAGE_RELEASE 1)
SET (CPACK_RPM_PACKAGE_AUTOREQ "no")
SET (CPACK_RPM_PACKAGE_AUTOREQPROV "no")
SET (CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})
SET (CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${CMAKE_SYSTEM_PROCESSOR}")
SET (CPACK_PACKAGE_VENDOR "WZ-HTTPD Team")
INCLUDE (CPack)
